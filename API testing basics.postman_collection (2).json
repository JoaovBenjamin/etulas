{
	"info": {
		"_postman_id": "437fcf63-138e-4c04-b645-45b49abb6e27",
		"name": "API testing basics",
		"description": "# ðŸ§ª Get started here\n\nPostman's powerful [scripting feature](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) helps you to write a range of API tests in JavaScript, including integration, regression, and contract tests.\n\nThis template demonstrates how to work with the Postman basic test syntax to test a single HTTP API request.\n\n## ðŸ”– How to use this template?\n\n#### Step 1: Send requests\n\nSend the sample requests and view the response and test results.\n\n#### Step 2: Update the sample request URL\n\nReplace the sample request URLs with your desired API endpoints.\n\n#### Step 3: Customize tests\n\nCustomize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n## ðŸ’ª Quick tips for writing tests\n\n- Organize your test scenarios by grouping your requests in [collections](https://www.getpostman.com/docs/v6/postman/collections/intro_to_collections) and [folders](https://www.getpostman.com/docs/v6/postman/collections/managing_collections#adding-folders), and naming them descriptively\n- Document your APIâ€™s requirements using [markdown in the descriptions](https://www.getpostman.com/docs/v6/postman/collections/using_markdown_for_descriptions)\n- Use [variables](https://www.getpostman.com/docs/v6/postman/environments_and_globals/variables) to simulate more sophisticated user flows\n- Common tests that will be run after every request can be added to collection-level tests or folder-level tests\n    \n\n## ðŸ’¡Related templates\n\n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54)  \n[REST API basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=ddb19591-3097-41cf-82af-c84273e56719&sourceTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54)  \n[Integration testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a&sourceTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54)  \n[Regression testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=7ab0f80e-a964-46ee-b948-4a4e3a85809c&sourceTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30609394"
	},
	"item": [
		{
			"name": "API tests",
			"item": [
				{
					"name": "Hospital API",
					"item": [
						{
							"name": "Hospital",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/hospital",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"hospital"
									]
								},
								"description": "This test is to validate the response status code. This Snippet is also available on the right sidebar under `Status code: Code in 200`."
							},
							"response": [
								{
									"name": "Status",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://postman-echo.com/get?foo1=bar1&foo2=bar2",
											"protocol": "https",
											"host": [
												"postman-echo",
												"com"
											],
											"path": [
												"get"
											],
											"query": [
												{
													"key": "foo1",
													"value": "bar1"
												},
												{
													"key": "foo2",
													"value": "bar2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Nov 2018 22:21:20 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"1cd-LkUKVugbVYQuMcTU7OTzmp77cMo\""
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "348"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"args\": {\n        \"foo1\": \"bar1\",\n        \"foo2\": \"bar2\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"cookie\": \"sails.sid=s%3AK8csWt5VZ3Oalv85HiBtffDcrSOJ-RiP.V14RjjJqkOv8%2BLXuHRmZ9l50G8S6eU16yLU%2F3N%2F0dKU\",\n        \"postman-token\": \"c6b9bca5-7369-4da8-a539-6c906d1133f2\",\n        \"user-agent\": \"PostmanRuntime/7.3.0\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"url\": \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\"\n}"
								}
							]
						},
						{
							"name": "Hospital",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//       \"id\": 1,\r\n//       \"nome\": \"Hospital UniversitÃ¡rio\",\r\n//       \"telefone\": \"67554333111\",\r\n//       \"cnpj\": \"05.388.218/0001-89\",\r\n//       \"ativo\": true\r\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/hospital/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"hospital",
										"2"
									]
								},
								"description": "This test is to validate the response time. This Snippet is also available on the right sidebar under `Response time is less than 200ms`."
							},
							"response": [
								{
									"name": "Performance",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "This is expected to be sent back as part of response body."
										},
										"url": {
											"raw": "https://postman-echo.com/put",
											"protocol": "https",
											"host": [
												"postman-echo",
												"com"
											],
											"path": [
												"put"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Nov 2018 22:21:34 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"235-EkrhuBWZKrBKKgRg6q6rJ7DOZ/o\""
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "set-cookie",
											"value": "sails.sid=s%3AUuE9kqyAFxbvBvvH8aX3WEBLXiNgjK7-.ErzxoeVFY7HfTK%2BPjoOs%2BzaP3yU8%2BcM59adz0oo9LlA; Path=/; HttpOnly"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "414"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"args\": {},\n    \"data\": \"This is expected to be sent back as part of response body.\",\n    \"files\": {},\n    \"form\": {},\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"content-length\": \"58\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"text/plain\",\n        \"cookie\": \"sails.sid=s%3AK8csWt5VZ3Oalv85HiBtffDcrSOJ-RiP.V14RjjJqkOv8%2BLXuHRmZ9l50G8S6eU16yLU%2F3N%2F0dKU\",\n        \"postman-token\": \"cc394095-6587-4079-bcba-3705b175115d\",\n        \"user-agent\": \"PostmanRuntime/7.3.0\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"json\": null,\n    \"url\": \"https://postman-echo.com/put\"\n}"
								}
							]
						},
						{
							"name": "Hospital",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Returns 7 char alphanumeric id\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.form.someHash).to.match(/^[a-z0-9]{7}$/);",
											"});",
											"",
											"pm.test(\"Returns 15 char alhpanumeric id\", function () {",
											"    let jsonData = pm.response.json();",
											"    pm.expect(jsonData.form.secondHash).to.match(/^[a-z0-9]{15}$/);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "//Objetos Json\r\n\r\n// // [\r\n//     {\r\n//         \r\n//         \"nome\": \"Hospital UniversitÃ¡rio\",\r\n//         \"telefone\": \"66554433221\",\r\n//         \"cnpj\": \"05.388.218/0001-89\",\r\n//         \"ativo\": true\r\n//     }\r\n//     {\r\n//         \r\n//         \"nome\": \"Hospital Central\",\r\n//         \"telefone\": \"11223344551\",\r\n//         \"cnpj\": \"55.882.338/0001-06\",\r\n//         \"ativo\": true\r\n//     }\r\n// ]\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/hospital",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"hospital"
									]
								},
								"description": "This test is written to validate the server performed a function as expected."
							},
							"response": [
								{
									"name": "Functional",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "someHash",
													"value": "7654321",
													"type": "text"
												},
												{
													"key": "secondHash",
													"value": "987654321asdfgh",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://postman-echo.com/post",
											"protocol": "https",
											"host": [
												"postman-echo",
												"com"
											],
											"path": [
												"post"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Nov 2018 22:22:08 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"277-9d2jX3MwxfNYN4a9mHbeHYeuEMA\""
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "set-cookie",
											"value": "sails.sid=s%3AG3Skk-KwKzhuN9bCFLG38XDvX_n76FY7.SnEQNLnssVB0vIWq0%2Bqn%2FoZhMdvJqAp6Toc8YMDlMhw; Path=/; HttpOnly"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "408"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"args\": {},\n    \"data\": \"\",\n    \"files\": {},\n    \"form\": {\n        \"someHash\": \"7654321\",\n        \"secondHash\": \"987654321asdfgh\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"content-length\": \"43\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/x-www-form-urlencoded\",\n        \"cookie\": \"sails.sid=s%3AUuE9kqyAFxbvBvvH8aX3WEBLXiNgjK7-.ErzxoeVFY7HfTK%2BPjoOs%2BzaP3yU8%2BcM59adz0oo9LlA\",\n        \"postman-token\": \"e6a118ae-af47-4fb6-ac35-3cf2bcbafd00\",\n        \"user-agent\": \"PostmanRuntime/7.3.0\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"json\": {\n        \"someHash\": \"7654321\",\n        \"secondHash\": \"987654321asdfgh\"\n    },\n    \"url\": \"https://postman-echo.com/post\"\n}"
								}
							]
						},
						{
							"name": "Delete Hospital",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let jsonResponse = pm.response.json();",
											"",
											"pm.test(\"Response should be a parsable JSON\", function() {",
											"    pm.expect(jsonResponse).to.be.ok;",
											"});",
											"",
											"pm.test(\"Response body should be an object\", function() {",
											"    pm.expect(jsonResponse).to.be.an('object');",
											"});",
											"",
											"pm.test(\"Response body should be in the correct format\", function() {",
											"    pm.expect(jsonResponse.args).to.be.a('object');",
											"    pm.expect(jsonResponse.data).to.be.a('string');",
											"    pm.expect(jsonResponse.files).to.be.a('object');",
											"    pm.expect(jsonResponse.form).to.be.a('object');",
											"    pm.expect(jsonResponse.headers).to.be.a('object');",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "This is expected to be sent back as part of response body."
								},
								"url": {
									"raw": "http://localhost:8080/hospital/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"hospital",
										"1"
									]
								},
								"description": "This test is written to demonstrate how to bundle several assertions within a single test."
							},
							"response": [
								{
									"name": "Functional2",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "This is expected to be sent back as part of response body."
										},
										"url": {
											"raw": "https://postman-echo.com/delete",
											"protocol": "https",
											"host": [
												"postman-echo",
												"com"
											],
											"path": [
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Nov 2018 22:22:22 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"236-unqr/LuiPP07B85WHuciASf+YdA\""
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "set-cookie",
											"value": "sails.sid=s%3Aa9JaDxhKoLl3zyptDL3Vbo-kXgiIoqOY.o566AhO0IGGXbdop127kZi0Xq9bHd0q3RjrHgs2G9c4; Path=/; HttpOnly"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Length",
											"value": "415"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"args\": {},\n    \"data\": \"This is expected to be sent back as part of response body.\",\n    \"files\": {},\n    \"form\": {},\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"content-length\": \"58\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"text/plain\",\n        \"cookie\": \"sails.sid=s%3AG3Skk-KwKzhuN9bCFLG38XDvX_n76FY7.SnEQNLnssVB0vIWq0%2Bqn%2FoZhMdvJqAp6Toc8YMDlMhw\",\n        \"postman-token\": \"a26a6cbb-abb4-4e8b-8a1e-4ba63450afcb\",\n        \"user-agent\": \"PostmanRuntime/7.3.0\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"json\": null,\n    \"url\": \"https://postman-echo.com/delete\"\n}"
								}
							]
						},
						{
							"name": "Get Hospital Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/hospital/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"hospital",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"description": "Teste do projeto Etulas no CRUD HOSPITAL"
				},
				{
					"name": "Paciente API",
					"item": [
						{
							"name": "Post Paciente",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"nome\": \"Maria Oliveira\",\r\n//   \"cpf\": \"699.172.060-78\",\r\n//   \"telefone\": \"99887766551\",\r\n//   \"idade\": 25,\r\n//   \"genero\": \"FEMININO\"\r\n// }\r\n\r\n// {\r\n//   \"nome\": \"Pedro Souza\",\r\n//   \"cpf\": \"511.738.500-40\",\r\n//   \"telefone\": \"11223344551\",\r\n//   \"idade\": 40,\r\n//   \"genero\": \"MASCULINO\"\r\n// }\r\n\r\n// {\r\n//   \"nome\": \"Ana Santos\",\r\n//   \"cpf\": \"145.548.840-23\",\r\n//   \"telefone\": \"99887766851\",\r\n//   \"idade\": 35,\r\n//   \"genero\": \"FEMININO\"\r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/paciente",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"paciente"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Paciente",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/paciente",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"paciente"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Paciente By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/paciente/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"paciente",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Paciente By CPF",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/paciente/cpf/699.172.060-78",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"paciente",
										"cpf",
										"699.172.060-78"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Paciente",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//         \"id\": 1,\r\n//         \"nome\": \"Maria Oliveira do Carmo\",\r\n//         \"cpf\": \"699.172.060-78\",\r\n//         \"telefone\": \"10887766551\",\r\n//         \"idade\": 34,\r\n//         \"genero\": \"FEMININO\"\r\n//     }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/paciente/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"paciente",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Paciente",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/paciente/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"paciente",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"description": "Teste do projeto ETULAS no CRUD de paciente"
				},
				{
					"name": "Endereco API",
					"item": [
						{
							"name": "Post Endereco",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n    \r\n//     \"numeroEdificio\": \"101112\",\r\n//     \"logadouro\": \"Avenida Paulista\",\r\n//     \"bairro\": \"Bela Vista\",\r\n//     \"cidade\": \"SÃ£o Paulo\",\r\n//     \"enderecoEnum\": \"SP\"\r\n// }\r\n\r\n// {\r\n    \r\n//     \"numeroEdificio\": \"789\",\r\n//     \"logadouro\": \"Rua das Palmeiras\",\r\n//     \"bairro\": \"Jardins\",\r\n//     \"cidade\": \"SÃ£o Paulo\",\r\n//     \"enderecoEnum\": \"SP\"\r\n// }\r\n\r\n// {\r\n\r\n//     \"numeroEdificio\": \"456\",\r\n//     \"logadouro\": \"Avenida Brasil\",\r\n//     \"bairro\": \"Copacabana\",\r\n//     \"cidade\": \"Rio de Janeiro\",\r\n//     \"enderecoEnum\": \"RJ\"\r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/endereco",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"endereco"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Endereco",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/endereco",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"endereco"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Endereco By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/endereco/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"endereco",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Endereco",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1,\r\n    \"numeroEdificio\": \"79\",\r\n    \"logadouro\": \"Rua das Palmeiras\",\r\n    \"bairro\": \"Jardins\",\r\n    \"cidade\": \"SÃ£o Paulo\",\r\n    \"enderecoEnum\": \"SP\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/endereco/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"endereco",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Endereco",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/endereco/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"endereco",
										"2"
									]
								}
							},
							"response": []
						}
					],
					"description": "Teste do projeto ETULAS do CRUD endereÃ§o"
				},
				{
					"name": "Convenio",
					"item": [
						{
							"name": "POST Convenio",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"nome\": \"Convenio A\",\r\n//   \"cnpj\": \"37.050.194/0001-40\",\r\n//   \"telefone\": \"1111111-1111\",\r\n//   \"ativo\": true\r\n// }\r\n\r\n// {\r\n//   \"nome\": \"Convenio B\",\r\n//   \"cnpj\": \"46.437.686/0001-83\",\r\n//   \"telefone\": \"1111111-1111\",\r\n//   \"ativo\": true\r\n// }\r\n\r\n// {\r\n//   \"nome\": \"Convenio A\",\r\n//   \"cnpj\": \"16.057.491/0001-47\",\r\n//   \"telefone\": \"1111111-1111\",\r\n//   \"ativo\": false\r\n// }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/convenio",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"convenio"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET convenio",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/convenio",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"convenio"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Convenio",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"id\": 2,\r\n        \"nome\": \"Convenio D\",\r\n        \"cnpj\": \"16.057.491/0001-47\",\r\n        \"telefone\": \"1111111-1111\",\r\n        \"ativo\": true\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/convenio/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"convenio",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Convenio by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/convenio/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"convenio",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Convenio",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/convenio/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"convenio",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"description": "Teste do projeto etulas no CRUD convenio"
				},
				{
					"name": "Anamnesia",
					"item": [
						{
							"name": "Anamnesia",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/anamnesia",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"anamnesia"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Anamnesia",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"lesoes\": \"ErupÃ§Ã£o cutÃ¢nea na regiÃ£o dos braÃ§os e pernas\",\r\n//   \"genetica\": \"HistÃ³rico familiar de diabetes\",\r\n//   \"cronicas\": \"HipertensÃ£o\",\r\n//   \"alergias\": \"Alergia Ã  penicilina\"\r\n// }\r\n\r\n// {\r\n//   \"lesoes\": \"Sem lesÃµes significativas\",\r\n//   \"genetica\": \"Nenhuma doenÃ§a genÃ©tica conhecida na famÃ­lia\",\r\n//   \"cronicas\": \"Nenhuma\",\r\n//   \"alergias\": \"Nenhuma\"\r\n// }\r\n// {\r\n//   \"lesoes\": \"Eczema nas mÃ£os\",\r\n//   \"genetica\": \"HistÃ³rico familiar de doenÃ§a cardÃ­aca\",\r\n//   \"cronicas\": \"Asma\",\r\n//   \"alergias\": \"Alergia a amendoim\"\r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/anamnesia",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"anamnesia"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Anamnesia",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/anamnesia/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"anamnesia",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT Anamnesia",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " {\r\n        \"id\": 1,\r\n        \"lesoes\": \"Sem lesÃµes significativas\",\r\n        \"genetica\": \"Nenhuma doenÃ§a genÃ©tica conhecida na famÃ­lia\",\r\n        \"cronicas\": \"Sinusite\",\r\n        \"alergias\": \"Nenhuma\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/anamnesia/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"anamnesia",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET By Id Anamnesia",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/anamnesia/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"anamnesia",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Ficha de Atendimento",
					"item": [
						{
							"name": "Get Ficha de Atendimento",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/fichadeatendimento",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"fichadeatendimento"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Ficha de Atendimento",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"peso\": 70.5,\r\n//   \"pressao\": \"120/80\",\r\n//   \"altura\": 1.75,\r\n//   \"temperatura\": 37.2,\r\n//   \"dores\": \"Dores leves nas costas\",\r\n//   \"entradaPaciente\": \"2024-04-16\",\r\n//   \"saidaPaciente\": \"2024-04-17\",\r\n//   \"ativo\": true\r\n// }\r\n\r\n// {\r\n//   \"peso\": 65.2,\r\n//   \"pressao\": \"110/70\",\r\n//   \"altura\": 1.68,\r\n//   \"temperatura\": 36.8,\r\n//   \"dores\": \"Sem dores\",\r\n//   \"entradaPaciente\": \"2024-04-18\",\r\n//   \"saidaPaciente\": \"2024-04-19\",\r\n//   \"ativo\": true\r\n// }\r\n// {\r\n//   \"peso\": 80.0,\r\n//   \"pressao\": \"130/90\",\r\n//   \"altura\": 1.80,\r\n//   \"temperatura\": 37.5,\r\n//   \"dores\": \"Dores intensas no abdÃ´men\",\r\n//   \"entradaPaciente\": \"2024-04-13\",\r\n//   \"saidaPaciente\": \"2024-04-14\",\r\n//   \"ativo\": false\r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/fichadeatendimento",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"fichadeatendimento"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Ficha atendimento",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\":1,\r\n  \"peso\": 66.8,\r\n  \"pressao\": \"120/80\",\r\n  \"altura\": 1.75,\r\n  \"temperatura\": 37.2,\r\n  \"dores\": \"Dores leves nas costas\",\r\n  \"entradaPaciente\": \"2024-04-16\",\r\n  \"saidaPaciente\": \"2024-04-17\",\r\n  \"ativo\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/fichadeatendimento/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"fichadeatendimento",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ficha de atendimento",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/fichadeatendimento/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"fichadeatendimento",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET By Id ",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/fichadeatendimento/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"fichadeatendimento",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "especialidades",
					"item": [
						{
							"name": "POST especialidaes",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// {\r\n//   \"nomeEspecialidade\": \"CARDIOLOGIA\",\r\n//   \"descricaoEspecialidade\": \"Especialidade mÃ©dica que se dedica ao diagnÃ³stico e tratamento de doenÃ§as do coraÃ§Ã£o e do sistema cardiovascular.\",\r\n//   \"descricaoProcedimento\": \"RealizaÃ§Ã£o de consultas, exames de imagem, eletrocardiograma, ecocardiograma, entre outros.\",\r\n//   \"ativo\": true\r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/especialidades",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"especialidades"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET especialidades",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/especialidades",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"especialidades"
									]
								}
							},
							"response": []
						},
						{
							"name": "especialides get by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/especialidades/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"especialidades",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT especialidades",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nomeEspecialidade\": \"CARDIOLOGIA\",\r\n  \"descricaoEspecialidade\": \"Especialidade mÃ©dica que se dedica ao diagnÃ³stico e tratamento de doenÃ§as do coraÃ§Ã£o e do sistema cardiovascular.\",\r\n  \"descricaoProcedimento\": \"RealizaÃ§Ã£o de consultas, exames de imagem, eletrocardiograma, ecocardiograma, entre outros.\",\r\n  \"ativo\": false\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/especialidades/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"especialidades",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE especialidades",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/especialidades/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"especialidades",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Equipamentos API",
					"item": [
						{
							"name": "POST Equipamentos",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"RessonÃ¢ncia MagnÃ©tica\",\r\n  \"procedimento\": \"RealizaÃ§Ã£o de exames de imagem detalhados para diagnÃ³stico de diversas condiÃ§Ãµes mÃ©dicas.\",\r\n  \"sala\": 3,\r\n  \"ativo\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipamentos",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipamentos"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET equipamentos",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipamentos",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipamentos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipamentos/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipamentos",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT equipamentos",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"RessonÃ¢ncia MagnÃ©tica\",\r\n  \"procedimento\": \"RealizaÃ§Ã£o de exames de imagem detalhados para diagnÃ³stico de diversas condiÃ§Ãµes mÃ©dicas.\",\r\n  \"sala\": 6,\r\n  \"ativo\": true\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/equipamentos/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipamentos",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE equipamentos",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/equipamentos/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"equipamentos",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Sala API",
					"item": [
						{
							"name": "POST sala",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"numeroDaSala\": \"Sala 101\",\r\n  \"uti\": \"Sim\",\r\n  \"descricao\": \"Sala de internaÃ§Ã£o geral com 10 leitos.\",\r\n  \"ativo\": true\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/sala",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"sala"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET SALA",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/sala",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"sala"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/sala/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"sala",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT sala",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"numeroDaSala\": \"Sala 101\",\r\n  \"uti\": \"Sim\",\r\n  \"descricao\": \"Sala de internaÃ§Ã£o geral com 10 leitos.\",\r\n  \"ativo\": false\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/sala/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"sala",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE sala",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/sala/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"sala",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Teste de API do projeto Etulas.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}